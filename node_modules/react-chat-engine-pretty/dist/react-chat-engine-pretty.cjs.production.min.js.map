{"version":3,"file":"react-chat-engine-pretty.cjs.production.min.js","sources":["../src/functions/isMobile.ts","../src/functions/getOtherUsers.ts","../src/components/OtherAvatars.tsx","../src/functions/dates.ts","../src/components/ChatHeader.tsx","../src/components/ChatForm.tsx","../src/components/ChatCard.tsx","../src/components/MessageForm.tsx","../src/components/ChatListHeader.tsx","../src/index.tsx"],"sourcesContent":["import { useLayoutEffect, useState } from 'react';\n\nexport const useIsMobile = () => {\n  const [size, setSize] = useState([0, 0]);\n  useLayoutEffect(() => {\n    function updateSize() {\n      setSize([window.innerWidth, window.innerHeight]);\n    }\n    window.addEventListener('resize', updateSize);\n    updateSize();\n    return () => window.removeEventListener('resize', updateSize);\n  }, []);\n  return size[0] < 667;\n};\n","import { ChatObject, PersonObject } from \"react-chat-engine-advanced\";\n\nexport const getOtherUsers = (\n  chat: ChatObject,\n  username: string\n): PersonObject[] => {\n  const otherMembers = chat.people.filter(\n    (member) => member.person.username !== username\n  );\n  return otherMembers.map(member => member.person)\n};\n\nexport const getChatTitle = (chat: ChatObject, username: string) => {\n  const otherUsers = getOtherUsers(chat, username)\n  if (otherUsers.length === 1) {\n    return `${otherUsers[0].first_name} ${otherUsers[0].last_name}`;\n  } else {\n    var title = '';\n    for (let i = 0; i < otherUsers.length; i++) {\n      if (i === otherUsers.length - 1) {\n        title += otherUsers[i].first_name;\n      } else if (i === otherUsers.length - 2) {\n        title += otherUsers[i].first_name + ' & ';\n      } else {\n        title += otherUsers[i].first_name + ', ';\n      }\n    }\n    return title;\n  }\n};\n","import React from 'react';\n\nimport { Avatar, ChatObject } from 'react-chat-engine-advanced';\nimport { getOtherUsers } from '../functions/getOtherUsers';\ninterface OtherAvatarProps {\n  chat: ChatObject;\n  username: string;\n  style?: React.CSSProperties;\n}\n\nconst OtherAvatars = (props: OtherAvatarProps) => {\n  const otherUsers = getOtherUsers(props.chat, props.username);\n  const memberOne = otherUsers.length > 0 ? otherUsers[0] : undefined;\n  const memberTwo = otherUsers.length > 1 ? otherUsers[1] : undefined;\n  const memberThree = otherUsers.length > 2 ? otherUsers[2] : undefined;\n\n  return (\n    <div style={props.style}>\n      <Avatar\n        className=\"ce-custom-header-avatar\"\n        avatarUrl={memberOne?.avatar}\n        username={memberOne?.username}\n        style={{\n          ...styles.avatar,\n          ...(memberOne?.is_online ? styles.online : styles.offline),\n          ...(memberTwo && {\n            width: '28px',\n            height: '28px',\n            lineHeight: '28px',\n            fontSize: '12px',\n          }),\n          ...(memberThree && {\n            width: '21px',\n            height: '21px',\n            lineHeight: '21px',\n            fontSize: '10px',\n          }),\n        }}\n      />\n\n      {memberTwo && (\n        <Avatar\n          className=\"ce-custom-header-avatar\"\n          avatarUrl={memberTwo?.avatar}\n          username={memberTwo?.username}\n          style={{\n            ...styles.avatar,\n            ...(memberOne?.is_online ? styles.online : styles.offline),\n            ...{\n              width: '28px',\n              height: '28px',\n              lineHeight: '28px',\n              fontSize: '12px',\n              top: 'calc(40px - 28px - 6px)',\n              left: 'calc(40px - 28px)',\n            },\n            ...(memberThree && {\n              width: '21px',\n              height: '21px',\n              lineHeight: '21px',\n              fontSize: '10px',\n              top: '-5px',\n              left: '22px',\n            }),\n          }}\n        />\n      )}\n\n      {memberThree && (\n        <Avatar\n          className=\"ce-custom-header-avatar\"\n          avatarUrl={memberThree?.avatar}\n          username={memberThree?.username}\n          style={{\n            ...styles.avatar,\n            ...(memberThree?.is_online ? styles.online : styles.offline),\n            ...{\n              width: '21px',\n              height: '21px',\n              lineHeight: '21px',\n              fontSize: '10px',\n              top: '-7px',\n              left: '11px',\n            },\n          }}\n        />\n      )}\n    </div>\n  );\n};\n\nconst styles = {\n  avatar: {\n    display: 'inline-block',\n    position: 'relative',\n    top: '22px',\n    marginLeft: '12px',\n    width: '38px',\n    height: '38px',\n    fontSize: '14px',\n    lineHeight: '40px',\n    transition: 'all 0.66s ease',\n  } as React.CSSProperties,\n  online: {\n    border: '1px solid rgb(24, 144, 255)',\n    boxShadow: 'rgb(24 144 255 / 35%) 0px 2px 7px',\n  } as React.CSSProperties,\n  offline: {\n    border: '1px solid #fa541c',\n    boxShadow: 'rgb(245 34 45 / 35%) 0px 2px 7px',\n  } as React.CSSProperties,\n};\n\nexport default OtherAvatars;\n","export const nowTimeStamp = () => {\n    return new Date()\n      .toISOString()\n      .replace(\"T\", \" \")\n      .replace(\"Z\", `${Math.floor(Math.random() * 1000)}+00:00`);\n  };\n  ","import React, { CSSProperties } from 'react';\n\nimport axios from 'axios';\n\nimport { ChatHeaderProps, ChatObject } from 'react-chat-engine-advanced';\n\nimport {\n  DeleteFilled,\n  PaperClipOutlined,\n  LoadingOutlined,\n} from '@ant-design/icons';\n\nimport OtherAvatars from './OtherAvatars';\n\nimport { nowTimeStamp } from '../functions/dates';\nimport { getOtherUsers, getChatTitle } from '../functions/getOtherUsers';\n\nimport { useState } from 'react';\n\ninterface CustomChatHeaderProps extends ChatHeaderProps {\n  chat?: ChatObject;\n  projectId: string;\n  username: string;\n  secret: string;\n  onDeleteChat: (oldChat: ChatObject) => void;\n}\n\nconst ChatHeader = (props: CustomChatHeaderProps) => {\n  // State\n  const [isFilePickerLoading, setFilePickerLoading] = useState(false);\n  const [isDeleteLoading, setDeleteLoading] = useState(false);\n\n  const otherMembers = props.chat\n    ? getOtherUsers(props.chat, props.username)\n    : [];\n  const otherMember = otherMembers.length > 0 ? otherMembers[0] : undefined;\n\n  const onFilesSelect: React.ChangeEventHandler<HTMLInputElement> = e => {\n    if (!props.chat) return;\n    setFilePickerLoading(true);\n\n    const headers = {\n      'Project-ID': props.projectId,\n      'User-Name': props.username,\n      'User-Secret': props.secret,\n    };\n\n    const formdata = new FormData();\n    const filesArr = Array.from(e.target.files !== null ? e.target.files : []);\n    filesArr.forEach(file => formdata.append('attachments', file, file.name));\n    formdata.append('created', nowTimeStamp());\n    formdata.append('sender_username', props.username);\n    formdata.append('custom_json', JSON.stringify({}));\n\n    axios\n      .post(\n        `https://api.chatengine.io/chats/${props.chat.id}/messages/`,\n        formdata,\n        { headers }\n      )\n      .then(() => setFilePickerLoading(false))\n      .catch(() => setFilePickerLoading(false));\n  };\n\n  const onDelete = () => {\n    if (!props.chat) return;\n    setDeleteLoading(true);\n\n    const headers = {\n      'Project-ID': props.projectId,\n      'User-Name': props.username,\n      'User-Secret': props.secret,\n    };\n\n    axios\n      .delete(`https://api.chatengine.io/chats/${props.chat.id}/`, { headers })\n      .then(r => {\n        setDeleteLoading(false);\n        props.onDeleteChat(r.data);\n      });\n  };\n\n  if (!otherMember || !props.chat)\n    return <div className=\"ce-custom-chat-header\" style={styles.chatHeader} />;\n\n  return (\n    <div className=\"ce-custom-chat-header\" style={styles.chatHeader}>\n      <OtherAvatars\n        chat={props.chat}\n        username={props.username}\n        style={styles.chatAvatars}\n      />\n\n      <div className=\"ce-custom-header-text\" style={styles.headerText}>\n        <div className=\"ce-custom-header-title\" style={styles.headerTitle}>\n          {getChatTitle(props.chat, props.username)}\n        </div>\n        <div\n          className=\"ce-custom-header-subtitle\"\n          style={styles.headerSubtitle}\n        >\n          {otherMember.is_online ? 'Online' : 'Offline'}\n        </div>\n      </div>\n\n      <div className=\"ce-custom-header-icon-wrapper\" style={styles.iconWrapper}>\n        <form style={{ display: 'inline-block' }}>\n          <label htmlFor=\"ce-files-picker\">\n            {isFilePickerLoading ? (\n              <LoadingOutlined\n                style={{ color: 'rgb(153, 153, 153)' }}\n                className=\"ce-custom-header-icon\"\n              />\n            ) : (\n              <PaperClipOutlined\n                style={styles.headerIcon}\n                className=\"ce-custom-header-icon\"\n              />\n            )}\n          </label>\n          <input\n            multiple\n            id=\"ce-files-picker\"\n            style={{ visibility: 'hidden', height: '0px', width: '0px' }}\n            type=\"file\"\n            onChange={onFilesSelect}\n          />\n        </form>\n\n        {isDeleteLoading ? (\n          <LoadingOutlined\n            style={{ color: 'rgb(153, 153, 153)' }}\n            className=\"ce-custom-header-icon\"\n          />\n        ) : (\n          <DeleteFilled\n            onClick={() => onDelete()}\n            className=\"ce-custom-header-icon\"\n            style={styles.headerIcon}\n          />\n        )}\n      </div>\n\n      <style>{`.ce-custom-header-icon:hover { color: rgb(24, 144, 255) !important; }`}</style>\n    </div>\n  );\n};\n\nconst styles = {\n  chatAvatars: {\n    width: 'calc(40px + 14px + 14px)',\n    height: '100%',\n    display: 'block',\n  } as CSSProperties,\n  chatHeader: {\n    display: 'flex',\n    position: 'relative',\n    marginLeft: '12px',\n    width: 'calc(100% - 12px - 12px)',\n    height: '86px',\n  } as CSSProperties,\n  headerText: {\n    display: 'block',\n    width: 'calc(100% - 40px - 14px - 14px - 100px)',\n    height: '100%',\n    position: 'relative',\n  } as CSSProperties,\n  headerTitle: {\n    color: 'white',\n    fontSize: '13px',\n    fontFamily: 'Avenir',\n    paddingTop: '26.5px',\n  } as CSSProperties,\n  headerSubtitle: {\n    fontFamily: 'Avenir',\n    color: 'rgb(153, 153, 153)',\n    fontSize: '11px',\n  } as CSSProperties,\n  iconWrapper: {\n    display: 'block',\n    width: '100px',\n    height: '100%',\n    textAlign: 'right',\n  } as CSSProperties,\n  headerIcon: {\n    marginLeft: '12px',\n    paddingTop: 'calc((86px - 15px) / 2)',\n    cursor: 'pointer',\n    color: 'rgb(153, 153, 153)',\n    transition: 'all 0.66s ease',\n  } as CSSProperties,\n};\n\nexport default ChatHeader;\n","import React, { CSSProperties, useRef, useEffect, useState } from 'react';\n\nimport axios from 'axios';\n\nimport { PersonObject } from 'react-chat-engine-advanced';\n\nimport { PlusOutlined } from '@ant-design/icons';\n\nimport Select from 'react-select';\n\nexport interface OptionType {\n  value: string;\n  label: string;\n}\n\ninterface ChatFormProps {\n  projectId: string;\n  username: string;\n  secret: string;\n  onChange: (users: OptionType[]) => void;\n  onCancel: () => void;\n}\n\nconst ChatForm = (props: ChatFormProps) => {\n  const didMountRef = useRef(false);\n  const [options, setOptions] = useState<OptionType[]>([]);\n  const [selected, setSelected] = useState<OptionType[]>([]);\n\n  useEffect(() => {\n    if (!didMountRef.current) {\n      didMountRef.current = true;\n\n      getAllUsers(\n        users => {\n          const otherUsers = users.filter(\n            user => user.username !== props.username\n          );\n          const options = otherUsers.map(user => {\n            return {\n              value: JSON.stringify(user),\n              label: `${user.first_name} ${user.last_name}`,\n            };\n          });\n          setOptions(options);\n        },\n        () => console.log('oops!')\n      );\n    }\n  });\n\n  const getAllUsers = (\n    onSuccess: (data: PersonObject[]) => void,\n    onError: () => void\n  ) => {\n    axios\n      .get('https://api.chatengine.io/users/search/', {\n        headers: {\n          'Project-ID': props.projectId,\n          'User-Name': props.username,\n          'User-Secret': props.secret,\n        },\n      })\n      .then(r => onSuccess(r.data))\n      .catch(() => onError);\n  };\n\n  return (\n    <div className=\"ce-custom-chat-form\" style={styles.chatForm}>\n      <Select\n        options={options}\n        autoFocus={true}\n        isMulti={true}\n        onChange={users => {\n          setSelected(users as OptionType[]);\n          props.onChange(users as OptionType[]);\n        }}\n        styles={customStyles}\n        placeholder=\"Search for users...\"\n      />\n\n      <button\n        className=\"ce-create-chat-button\"\n        style={{\n          ...styles.createChatButton,\n          ...(selected.length === 0 && styles.createChatButtonDisabled),\n        }}\n        onClick={props.onCancel}\n        disabled={selected.length === 0}\n      >\n        <PlusOutlined />\n      </button>\n\n      <style>{`.ce-create-chat-button:hover { background-color: #40a9ff; }`}</style>\n    </div>\n  );\n};\n\ninterface StateType {\n  isFocused: boolean;\n}\n\nconst customStyles = {\n  container: () => ({\n    width: 'calc(100% - 12px - 12px - 38px - 4px)',\n    marginLeft: '12px',\n    marginTop: '26px',\n  }),\n  control: (provided: object) => ({\n    ...provided,\n    outline: 'none',\n    fontFamily: 'Avenir',\n    color: 'white',\n    backgroundColor: '#434758',\n    borderRadius: '8px',\n    border: '1px solid rgb(24, 144, 255)',\n    boxShadow: 'rgb(24 144 255 / 35%) 0px 2px 7px',\n  }),\n  input: (provided: object) => ({\n    ...provided,\n    color: 'white',\n  }),\n  placeholder: (provided: object) => ({\n    ...provided,\n    color: 'rgb(197, 197, 197)',\n  }),\n  option: (provided: object, state: StateType) => ({\n    ...provided,\n    fontFamily: 'Avenir',\n    color: 'rgb(197, 197, 197)',\n    backgroundColor: state.isFocused ? '#4e5263' : '#434758',\n  }),\n  noOptionsMessage: (provided: object) => ({\n    ...provided,\n    fontFamily: 'Avenir',\n  }),\n  menu: (provided: object) => ({\n    ...provided,\n    width: 'calc(100% - 12px - 12px - 38px - 4px)',\n    backgroundColor: '#434758',\n  }),\n};\n\nconst styles = {\n  chatForm: {\n    display: 'inline-block',\n    position: 'relative',\n    width: '100%',\n    height: '86px',\n  } as CSSProperties,\n  createChatButton: {\n    width: '38px',\n    height: '38px',\n    position: 'absolute',\n    right: '12px',\n    top: '26px',\n    borderRadius: '8px',\n    cursor: 'pointer',\n    transition: 'all 0.44s ease',\n    outline: 'none',\n    backgroundColor: 'rgb(24, 144, 255)',\n    border: '1px solid rgb(24, 144, 255)',\n    fontSize: '18px',\n    color: 'white',\n    boxShadow: 'rgba(24, 144, 255, 0.35) 0px 5px 15px',\n  } as CSSProperties,\n  createChatButtonDisabled: {\n    cursor: 'not-allowed',\n    color: 'rgb(62,64,75)',\n    backgroundColor: '#323642',\n    border: '1px solid #323642',\n    boxShadow: 'none',\n  } as CSSProperties,\n};\n\nexport default ChatForm;\n","import React from 'react';\n\nimport {\n  ChatCard,\n  ChatCardProps,\n  ChatObject,\n} from 'react-chat-engine-advanced';\n\nimport { getChatTitle, getOtherUsers } from '../functions/getOtherUsers';\n\nimport OtherAvatars from './OtherAvatars';\n\ninterface CustomChatCardProps extends ChatCardProps {\n  username: string;\n  isActive: boolean;\n  onChatCardClick: (chatId: number) => void;\n  chat?: ChatObject;\n}\n\nconst CustomChatCard = (props: CustomChatCardProps) => {\n  const { chat } = props;\n\n  if (chat === undefined) return <div />;\n\n  const otherUsers = getOtherUsers(chat, props.username);\n  const otherMember = otherUsers.length > 0 ? otherUsers[0] : undefined;\n  const username = otherMember ? otherMember.username : '';\n  const messageText = chat.last_message.text;\n  const hasNotification = chat.last_message.sender_username !== props.username;\n\n  return (\n    <div>\n      <style>{`\n        .ce-chat-card:hover { border: 1px solid #1890ff !important; box-shadow: rgb(24 144 255 / 35%) 0px 2px 7px !important; }\n        .ce-chat-card-loading { height: 10px !important; }\n        .ce-chat-card-title-loading { top: 16px !important; }\n        `}</style>\n\n      <ChatCard\n        title={getChatTitle(chat, props.username)}\n        description={\n          messageText === null || messageText.length === 0\n            ? 'Say hello'\n            : messageText\n        }\n        hasNotification={hasNotification}\n        avatarUrl={otherMember?.avatar}\n        avatarUsername={username}\n        avatarStyle={{\n          top: '12px',\n          boxShadow: otherMember?.is_online\n            ? 'rgb(24 144 255 / 35%) 0px 2px 7px'\n            : 'rgb(245 34 45 / 35%) 0px 2px 7px',\n          border: otherMember?.is_online\n            ? '1px solid rgb(24 144 255)'\n            : '1px solid rgb(245 34 45)',\n        }}\n        isActive={props.isActive}\n        renderAvatar={() => (\n          <OtherAvatars\n            chat={chat}\n            username={props.username}\n            style={{\n              position: 'relative',\n              width: '52px',\n              top: '-8px',\n            }}\n          />\n        )}\n        onClick={() => props.chat && props.onChatCardClick(props.chat.id)}\n        style={{\n          border: '1px solid #3e404b',\n          backgroundColor: '#3e404b',\n          margin: '10px 12px',\n          height: '68px',\n        }}\n        titleStyle={{ color: 'white' }}\n        subtitleStyle={{\n          bottom: '16px',\n          width: 'calc(70% - 44px)',\n          color: '#c5c5c5',\n        }}\n        timeStampStyle={{\n          fontSize: '12px',\n          bottom: '16px',\n        }}\n        activeStyle={{\n          border: '1px solid #1890ff',\n          backgroundColor: '#1890ff',\n          boxShadow: 'rgb(24 144 255 / 35%) 0px 2px 7px',\n          color: 'white',\n        }}\n        notificationStyle={{ top: 'calc((68px - 12px) / 2)' }}\n      />\n    </div>\n  );\n};\n\nexport default CustomChatCard;\n","import React, { CSSProperties } from 'react';\nimport { useState } from 'react';\n\nimport { CaretUpFilled } from '@ant-design/icons';\n\nimport { MessageObject, MessageFormProps } from 'react-chat-engine-advanced';\n\nimport { nowTimeStamp } from '../functions/dates';\n\nconst MessageForm = (props: MessageFormProps) => {\n  const [text, setText] = useState<string>('');\n  const [isFocused, setIsFocused] = useState<boolean>(false);\n\n  const onSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    if (text.trim().length === 0) {\n      return;\n    }\n\n    setText('');\n\n    const message: MessageObject = {\n      text: text,\n      sender_username: props.username ? props.username : '',\n      created: nowTimeStamp(),\n      custom_json: {},\n      attachments: [],\n    };\n\n    props.onSubmit && props.onSubmit(message);\n  };\n\n  return (\n    <form\n      onSubmit={onSubmit}\n      style={styles.messageForm}\n      className=\"ce-custom-message-form\"\n    >\n      <input\n        onChange={e => setText(e.target.value)}\n        value={text}\n        placeholder=\"Write a message...\"\n        className=\"ce-custom-message-input\"\n        style={{\n          ...styles.messageInput,\n          ...(isFocused ? styles.messageInputFocused : {}),\n        }}\n        onFocus={() => setIsFocused(true)}\n        onBlur={() => setIsFocused(false)}\n      />\n      <style>{`.ce-custom-message-input::placeholder { color: #e1e1e1; font-family: Avenir; }`}</style>\n\n      <button\n        type=\"submit\"\n        className=\"ce-custom-send-button\"\n        style={{ ...styles.sendButton }}\n      >\n        <CaretUpFilled />\n      </button>\n    </form>\n  );\n};\n\nconst styles = {\n  messageForm: {\n    height: '68px',\n    marginLeft: '12px',\n    marginRight: '12px',\n    width: 'calc(100% - 12px - 12px)',\n    borderRadius: '0px 0px 8px 8px',\n    backgroundColor: '#3e404b',\n  } as CSSProperties,\n  messageInput: {\n    marginTop: '6px',\n    marginLeft: '3.3vw',\n    marginRight: '4px',\n    width: 'calc(100% - 3.3vw - 3.3vw - 12px - 12px - 36px - 4px)',\n    boxShadow: 'rgba(24, 144, 255, 0.35) 0px 2px 7px',\n    border: '1px solid rgb(24, 144, 255)',\n    outline: 'none',\n    backgroundColor: '#434756',\n    color: 'white',\n    fontSize: '14px',\n    letterSpacing: '0.17px',\n    padding: '0px 15px',\n    height: '36px',\n    borderRadius: '8px',\n    transition: 'all .44s ease',\n  } as CSSProperties,\n  messageInputFocused: {\n    boxShadow: 'rgba(64, 169, 255, 0.35) 0px 2px 7px',\n    border: '1px solid #40a9ff',\n  } as CSSProperties,\n  sendButton: {\n    cursor: 'pointer',\n    backgroundColor: 'rgb(24, 144, 255)',\n    border: '1px solid rgb(24, 144, 255)',\n    width: '36px',\n    height: '36px',\n    borderRadius: '8px',\n    color: 'white',\n    boxShadow: 'rgba(24, 144, 255, 0.35) 0px 5px 15px',\n    transition: 'all .44s ease',\n  } as CSSProperties,\n};\n\nexport default MessageForm;\n","import React, { CSSProperties } from 'react';\n\nimport { FormOutlined } from '@ant-design/icons';\n\ninterface ChatListHeaderProps {\n  onNewChatClick: () => void;\n}\n\nconst ChatListHeader = (props: ChatListHeaderProps) => {\n  return (\n    <div style={styles.chatListHeader}>\n      <div style={styles.chatListHeaderTitle}>Chats</div>\n\n      <button\n        className=\"ce-new-chat-button\"\n        style={styles.chatListHeaderButton}\n        onClick={props.onNewChatClick}\n      >\n        <FormOutlined />\n      </button>\n\n      <style>{`.ce-new-chat-button:hover { color: rgb(24, 144, 255) !important; }`}</style>\n    </div>\n  );\n};\n\nconst styles = {\n  chatListHeader: {\n    display: 'inline-block',\n    width: 'calc(100% - 12px - 12px)',\n    margin: '0px 12px',\n    paddingTop: '28px',\n    paddingBottom: '32px',\n  } as CSSProperties,\n  chatListHeaderTitle: {\n    display: 'inline-block',\n    color: 'white',\n    fontSize: '21px',\n    fontFamily: 'Avenir',\n    fontWeight: '600',\n  } as CSSProperties,\n  chatListHeaderButton: {\n    display: 'inline-block',\n    float: 'right',\n    cursor: 'pointer',\n    transition: 'all 0.33s ease',\n    outline: 'none',\n    backgroundColor: 'rgb(40,43,54)',\n    border: '1px solid rgb(40,43,54)',\n    fontSize: '18px',\n    color: 'white',\n  } as CSSProperties,\n};\n\nexport default ChatListHeader;\n","import React, { useState } from 'react';\n\nimport axios from 'axios';\n\nimport {\n  useMultiChatLogic,\n  ChatList,\n  MultiChatWindowProps,\n  MultiChatSocket,\n  ChatFeed,\n  ChatCardProps,\n  ChatHeaderProps,\n  MessageFormProps,\n  MessageListProps,\n  MessageList,\n  PersonObject,\n} from 'react-chat-engine-advanced';\n\nimport { useIsMobile } from './functions/isMobile';\n\nimport ChatHeader from './components/ChatHeader';\nimport ChatForm, { OptionType } from './components/ChatForm';\nimport ChatCard from './components/ChatCard';\nimport MessageForm from './components/MessageForm';\nimport ChatListHeader from './components/ChatListHeader';\n\ninterface PrettyChatWindowProps extends MultiChatWindowProps {\n  projectId: string;\n  username: string;\n  secret: string;\n  httpUrl?: string;\n  height?: string;\n}\n\nexport const PrettyChatWindow = (props: PrettyChatWindowProps) => {\n  const [isChatFormActive, setIsChatFormActive] = useState(false);\n  const [chatFormUsers, setChatFromUsers] = useState<PersonObject[]>([]);\n  const isMobile: boolean = useIsMobile();\n\n  const chatProps = useMultiChatLogic(\n    props.projectId,\n    props.username,\n    props.secret,\n    props.httpUrl\n  );\n\n  async function getOrCreateChat() {\n    const usernames = chatFormUsers.map(user => user.username);\n    const data = {\n      usernames: usernames,\n    };\n    const headers = {\n      'Project-ID': chatProps.projectId,\n      'User-Name': chatProps.username,\n      'User-Secret': chatProps.secret,\n    };\n\n    axios.put('https://api.chatengine.io/chats/', data, { headers }).then(r => {\n      setIsChatFormActive(false);\n      setChatFromUsers([]);\n      chatProps.onChatCardClick(r.data.id);\n    });\n  }\n\n  const onChatFormChange = (options: OptionType[]) => {\n    const users: PersonObject[] = options.map(option =>\n      JSON.parse(option.value)\n    );\n    setChatFromUsers(users);\n  };\n\n  return (\n    <div\n      style={{ height: props.height ? props.height : '100%', display: 'flex' }}\n    >\n      <MultiChatSocket {...chatProps} />\n\n      <div style={styles.col1} />\n\n      <div style={isMobile ? styles.col0 : styles.col8}>\n        <ChatList\n          {...chatProps}\n          renderChatForm={() => (\n            <ChatListHeader\n              onNewChatClick={() => {\n                chatProps.setActiveChatId(undefined);\n                setIsChatFormActive(true);\n              }}\n            />\n          )}\n          renderChatCard={(props: ChatCardProps) => (\n            <ChatCard\n              {...props}\n              username={chatProps.username}\n              onChatCardClick={(chatId: number) => {\n                setIsChatFormActive(false);\n                setChatFromUsers([]);\n                chatProps.onChatCardClick(chatId);\n              }}\n              isActive={\n                props.chat !== undefined &&\n                chatProps.activeChatId === props.chat.id\n              }\n              chat={props.chat}\n            />\n          )}\n        />\n      </div>\n\n      <div style={isMobile ? styles.col22 : styles.col14}>\n        <ChatFeed\n          {...chatProps}\n          renderChatHeader={(chatHeaderProps: ChatHeaderProps) => {\n            if (isChatFormActive) {\n              return (\n                <ChatForm\n                  projectId={chatProps.projectId}\n                  username={chatProps.username}\n                  secret={chatProps.secret}\n                  onChange={onChatFormChange}\n                  onCancel={getOrCreateChat}\n                />\n              );\n            } else {\n              return (\n                <ChatHeader\n                  {...chatHeaderProps}\n                  chat={chatProps.chat}\n                  projectId={chatProps.projectId}\n                  username={chatProps.username}\n                  secret={chatProps.secret}\n                  onDeleteChat={chatProps.onDeleteChat}\n                />\n              );\n            }\n          }}\n          renderMessageList={(props: MessageListProps) => (\n            <MessageList\n              {...props}\n              renderMessageList={undefined}\n              messages={isChatFormActive ? [] : chatProps.messages}\n            />\n          )}\n          renderMessageForm={(props: MessageFormProps) => {\n            if (isChatFormActive) {\n              return <div style={styles.messageForm} />;\n            } else {\n              return <MessageForm {...props} />;\n            }\n          }}\n        />\n      </div>\n\n      <div style={styles.col1} />\n\n      <style>{`\n      .ce-chat-list { background-color: rgb(40,43,54) !important; }\n      .ce-chat-form { background-color: rgb(40,43,54) !important; padding-bottom: 14px !important;  }\n      .ce-chat-form-title { color: white !important; }\n\n      .ce-chat-feed-column { border: none !important; }\n      .ce-chat-feed { background-color: rgb(40,43,54) !important; }\n      .ce-message-list { margin-top: 24px !important; margin-left: 12px !important; margin-right: 12px !important; padding: 0px 3.3vw !important; background: linear-gradient(0deg, rgba(62,64,75,1) 0%, rgba(62,64,75,1) 75%, rgba(40,43,54,1) 100%); border-radius: 8px 8px 0px 0px !important; height: calc((100% - 85px) - 72px - 24px - 12px) !important; }\n\n      .ce-message-date-text { font-weight: 600; letter-spacing: 0.1px !important; font-family: 'Avenir' !important; color: rgb(153, 153, 153) !important; font-size: 14px !important; letter-spacing: -1px; }\n      .ce-my-message-body { font-family: 'Avenir' !important; padding: 15px !important; }\n      .ce-my-message-timestamp { font-weight: 600; letter-spacing: 0.1px !important; font-family: 'Avenir' !important; font-size: 12px !important; padding: 15px !important; margin-right: 0px !important; letter-spacing: -1px; }\n      .ce-their-message-body { font-family: 'Avenir' !important; padding: 15px !important; background-color: #434756 !important; color: white !important; }\n      .ce-their-message-timestamp { font-weight: 600; letter-spacing: 0.1px !important; font-family: 'Avenir' !important; font-size: 12px !important; padding: 15px !important; margin-left: 0px !important; letter-spacing: -1px; }\n      .ce-their-message-timestamp { color: rgb(241, 240, 240) !important; letter-spacing: -1px; }\n      .ce-their-message-sender-username { color: #999 !important; }\n      .ce-message-file { background-color: #434758 !important; color: #c5c5c5 !important; border-radius: 8px !important; }\n      .ce-message-image { background-color: #434758 !important; color: #c5c5c5 !important; border-radius: 8px !important; padding: 0px !important; max-width: 124px !important; max-height: 124px !important; }\n\n      .ce-mobile-chat-list-button { top: 32px !important; left: 0px !important; }\n      .ce-mobile-chat-settings-button { display: none !important; }\n\n      .ce-avatar-status { border: 2px solid rgb(40,43,54) !important; width: 7px !important; height: 7px !important; }\n      `}</style>\n    </div>\n  );\n};\n\nconst styles = {\n  col0: {\n    display: 'block',\n    flex: '0 0 0%',\n    maxWidth: '0%',\n  } as React.CSSProperties,\n  col1: {\n    display: 'block',\n    flex: '0 0 4.16666667%',\n    maxWidth: '4.16666667%',\n    backgroundColor: '#282b36',\n  } as React.CSSProperties,\n  col8: {\n    display: 'block',\n    flex: '0 0 33.3333333%',\n    maxWidth: '33.3333333%',\n  } as React.CSSProperties,\n  col9: {\n    display: 'block',\n    flex: '0 0 37.5%',\n    maxWidth: '37.5%',\n  } as React.CSSProperties,\n  col14: {\n    display: 'block',\n    flex: '0 0 58.33333333%',\n    maxWidth: '58.33333333%',\n  } as React.CSSProperties,\n  col16: {\n    display: 'block',\n    flex: '0 0 66.66666667%',\n    maxWidth: '66.66666667%',\n  } as React.CSSProperties,\n  col22: {\n    display: 'block',\n    flex: '0 0 91.66666667%',\n    maxWidth: '91.66666667%',\n  } as React.CSSProperties,\n  col24: {\n    display: 'block',\n    flex: '0 0 100%',\n    maxWidth: '100%',\n  } as React.CSSProperties,\n  messageForm: {\n    height: '68px',\n    marginLeft: '12px',\n    marginRight: '12px',\n    width: 'calc(100% - 12px - 12px)',\n    borderRadius: '0px 0px 8px 8px',\n    backgroundColor: '#3e404b',\n  } as React.CSSProperties,\n};\n"],"names":["getOtherUsers","chat","username","people","filter","member","person","map","getChatTitle","otherUsers","length","first_name","last_name","title","i","OtherAvatars","props","memberOne","undefined","memberTwo","memberThree","React","style","Avatar","className","avatarUrl","avatar","styles","is_online","online","offline","width","height","lineHeight","fontSize","top","left","display","position","marginLeft","transition","border","boxShadow","nowTimeStamp","Date","toISOString","replace","Math","floor","random","ChatHeader","useState","isFilePickerLoading","setFilePickerLoading","isDeleteLoading","setDeleteLoading","otherMembers","otherMember","chatHeader","chatAvatars","headerText","headerTitle","headerSubtitle","iconWrapper","htmlFor","LoadingOutlined","color","PaperClipOutlined","headerIcon","multiple","id","visibility","type","onChange","e","headers","Project-ID","projectId","User-Name","User-Secret","secret","formdata","FormData","Array","from","target","files","forEach","file","append","name","JSON","stringify","axios","post","then","DeleteFilled","onClick","r","onDeleteChat","data","fontFamily","paddingTop","textAlign","cursor","ChatForm","didMountRef","useRef","options","setOptions","selected","setSelected","useEffect","current","getAllUsers","users","user","value","label","console","log","onSuccess","onError","get","chatForm","Select","autoFocus","isMulti","customStyles","placeholder","createChatButton","createChatButtonDisabled","onCancel","disabled","PlusOutlined","container","marginTop","control","provided","outline","backgroundColor","borderRadius","input","option","state","isFocused","noOptionsMessage","menu","right","CustomChatCard","messageText","last_message","text","hasNotification","sender_username","ChatCard","description","avatarUsername","avatarStyle","isActive","renderAvatar","onChatCardClick","margin","titleStyle","subtitleStyle","bottom","timeStampStyle","activeStyle","notificationStyle","MessageForm","setText","setIsFocused","onSubmit","event","preventDefault","trim","message","created","custom_json","attachments","messageForm","messageInput","messageInputFocused","onFocus","onBlur","sendButton","CaretUpFilled","marginRight","letterSpacing","padding","ChatListHeader","chatListHeader","chatListHeaderTitle","chatListHeaderButton","onNewChatClick","FormOutlined","paddingBottom","fontWeight","float","col0","flex","maxWidth","col1","col8","col9","col14","col16","col22","col24","isChatFormActive","setIsChatFormActive","chatFormUsers","setChatFromUsers","isMobile","size","setSize","useLayoutEffect","updateSize","window","innerWidth","innerHeight","addEventListener","removeEventListener","useIsMobile","chatProps","useMultiChatLogic","httpUrl","getOrCreateChat","usernames","put","onChatFormChange","parse","MultiChatSocket","ChatList","renderChatForm","setActiveChatId","renderChatCard","chatId","activeChatId","ChatFeed","renderChatHeader","chatHeaderProps","renderMessageList","MessageList","messages","renderMessageForm"],"mappings":"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"}